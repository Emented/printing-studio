/*
 * This file is generated by jOOQ.
 */
package com.emented.printingstudio.jooq.tables.records


import com.emented.printingstudio.jooq.tables.BusinessInfo

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BusinessInfoRecord() : UpdatableRecordImpl<BusinessInfoRecord>(BusinessInfo.BUSINESS_INFO) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var inn: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var kpp: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var companyName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var creationTimestamp: OffsetDateTime?
        set(value): Unit = set(4, value)
        get(): OffsetDateTime? = get(4) as OffsetDateTime?

    open var updateTimestamp: OffsetDateTime?
        set(value): Unit = set(5, value)
        get(): OffsetDateTime? = get(5) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised BusinessInfoRecord
     */
    constructor(id: Long? = null, inn: String? = null, kpp: String? = null, companyName: String? = null, creationTimestamp: OffsetDateTime? = null, updateTimestamp: OffsetDateTime? = null): this() {
        this.id = id
        this.inn = inn
        this.kpp = kpp
        this.companyName = companyName
        this.creationTimestamp = creationTimestamp
        this.updateTimestamp = updateTimestamp
        resetChangedOnNotNull()
    }
}
