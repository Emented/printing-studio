/*
 * This file is generated by jOOQ.
 */
package com.emented.printingstudio.jooq.tables.records

import com.emented.printingstudio.jooq.tables.Order
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record14
import org.jooq.Row14
import org.jooq.impl.UpdatableRecordImpl
import java.math.BigDecimal
import java.time.OffsetDateTime

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OrderRecord() :
    UpdatableRecordImpl<OrderRecord>(Order.ORDER),
    Record14<Long?, Long?, Long?, String?, String?, Long?, Long?, Long?, Long?, BigDecimal?, Int?, Long?, OffsetDateTime?, OffsetDateTime?> {

    var id: Long?
        set(value) = set(0, value)
        get() = get(0) as Long?

    var customerId: Long?
        set(value) = set(1, value)
        get() = get(1) as Long?

    var status: Long?
        set(value) = set(2, value)
        get() = get(2) as Long?

    var photoUrl: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var description: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var materialId: Long?
        set(value) = set(5, value)
        get() = get(5) as Long?

    var printSettingId: Long?
        set(value) = set(6, value)
        get() = get(6) as Long?

    var paymentId: Long?
        set(value) = set(7, value)
        get() = get(7) as Long?

    var deliveryId: Long?
        set(value) = set(8, value)
        get() = get(8) as Long?

    var totalPrice: BigDecimal?
        set(value) = set(9, value)
        get() = get(9) as BigDecimal?

    var quantity: Int?
        set(value) = set(10, value)
        get() = get(10) as Int?

    var administratorId: Long?
        set(value) = set(11, value)
        get() = get(11) as Long?

    var creationTimestamp: OffsetDateTime?
        set(value) = set(12, value)
        get() = get(12) as OffsetDateTime?

    var updateTimestamp: OffsetDateTime?
        set(value) = set(13, value)
        get() = get(13) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row14<Long?, Long?, Long?, String?, String?, Long?, Long?, Long?, Long?, BigDecimal?, Int?, Long?, OffsetDateTime?, OffsetDateTime?> =
        super.fieldsRow() as Row14<Long?, Long?, Long?, String?, String?, Long?, Long?, Long?, Long?, BigDecimal?, Int?, Long?, OffsetDateTime?, OffsetDateTime?>

    override fun valuesRow(): Row14<Long?, Long?, Long?, String?, String?, Long?, Long?, Long?, Long?, BigDecimal?, Int?, Long?, OffsetDateTime?, OffsetDateTime?> =
        super.valuesRow() as Row14<Long?, Long?, Long?, String?, String?, Long?, Long?, Long?, Long?, BigDecimal?, Int?, Long?, OffsetDateTime?, OffsetDateTime?>

    override fun field1(): Field<Long?> = Order.ORDER.ID
    override fun field2(): Field<Long?> = Order.ORDER.CUSTOMER_ID
    override fun field3(): Field<Long?> = Order.ORDER.STATUS
    override fun field4(): Field<String?> = Order.ORDER.PHOTO_URL
    override fun field5(): Field<String?> = Order.ORDER.DESCRIPTION
    override fun field6(): Field<Long?> = Order.ORDER.MATERIAL_ID
    override fun field7(): Field<Long?> = Order.ORDER.PRINT_SETTING_ID
    override fun field8(): Field<Long?> = Order.ORDER.PAYMENT_ID
    override fun field9(): Field<Long?> = Order.ORDER.DELIVERY_ID
    override fun field10(): Field<BigDecimal?> = Order.ORDER.TOTAL_PRICE
    override fun field11(): Field<Int?> = Order.ORDER.QUANTITY
    override fun field12(): Field<Long?> = Order.ORDER.ADMINISTRATOR_ID
    override fun field13(): Field<OffsetDateTime?> = Order.ORDER.CREATION_TIMESTAMP
    override fun field14(): Field<OffsetDateTime?> = Order.ORDER.UPDATE_TIMESTAMP
    override fun component1(): Long? = id
    override fun component2(): Long? = customerId
    override fun component3(): Long? = status
    override fun component4(): String? = photoUrl
    override fun component5(): String? = description
    override fun component6(): Long? = materialId
    override fun component7(): Long? = printSettingId
    override fun component8(): Long? = paymentId
    override fun component9(): Long? = deliveryId
    override fun component10(): BigDecimal? = totalPrice
    override fun component11(): Int? = quantity
    override fun component12(): Long? = administratorId
    override fun component13(): OffsetDateTime? = creationTimestamp
    override fun component14(): OffsetDateTime? = updateTimestamp
    override fun value1(): Long? = id
    override fun value2(): Long? = customerId
    override fun value3(): Long? = status
    override fun value4(): String? = photoUrl
    override fun value5(): String? = description
    override fun value6(): Long? = materialId
    override fun value7(): Long? = printSettingId
    override fun value8(): Long? = paymentId
    override fun value9(): Long? = deliveryId
    override fun value10(): BigDecimal? = totalPrice
    override fun value11(): Int? = quantity
    override fun value12(): Long? = administratorId
    override fun value13(): OffsetDateTime? = creationTimestamp
    override fun value14(): OffsetDateTime? = updateTimestamp

    override fun value1(value: Long?): OrderRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): OrderRecord {
        this.customerId = value
        return this
    }

    override fun value3(value: Long?): OrderRecord {
        this.status = value
        return this
    }

    override fun value4(value: String?): OrderRecord {
        this.photoUrl = value
        return this
    }

    override fun value5(value: String?): OrderRecord {
        this.description = value
        return this
    }

    override fun value6(value: Long?): OrderRecord {
        this.materialId = value
        return this
    }

    override fun value7(value: Long?): OrderRecord {
        this.printSettingId = value
        return this
    }

    override fun value8(value: Long?): OrderRecord {
        this.paymentId = value
        return this
    }

    override fun value9(value: Long?): OrderRecord {
        this.deliveryId = value
        return this
    }

    override fun value10(value: BigDecimal?): OrderRecord {
        this.totalPrice = value
        return this
    }

    override fun value11(value: Int?): OrderRecord {
        this.quantity = value
        return this
    }

    override fun value12(value: Long?): OrderRecord {
        this.administratorId = value
        return this
    }

    override fun value13(value: OffsetDateTime?): OrderRecord {
        this.creationTimestamp = value
        return this
    }

    override fun value14(value: OffsetDateTime?): OrderRecord {
        this.updateTimestamp = value
        return this
    }

    override fun values(
        value1: Long?,
        value2: Long?,
        value3: Long?,
        value4: String?,
        value5: String?,
        value6: Long?,
        value7: Long?,
        value8: Long?,
        value9: Long?,
        value10: BigDecimal?,
        value11: Int?,
        value12: Long?,
        value13: OffsetDateTime?,
        value14: OffsetDateTime?,
    ): OrderRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        return this
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    constructor(
        id: Long? = null,
        customerId: Long? = null,
        status: Long? = null,
        photoUrl: String? = null,
        description: String? = null,
        materialId: Long? = null,
        printSettingId: Long? = null,
        paymentId: Long? = null,
        deliveryId: Long? = null,
        totalPrice: BigDecimal? = null,
        quantity: Int? = null,
        administratorId: Long? = null,
        creationTimestamp: OffsetDateTime? = null,
        updateTimestamp: OffsetDateTime? = null,
    ) : this() {
        this.id = id
        this.customerId = customerId
        this.status = status
        this.photoUrl = photoUrl
        this.description = description
        this.materialId = materialId
        this.printSettingId = printSettingId
        this.paymentId = paymentId
        this.deliveryId = deliveryId
        this.totalPrice = totalPrice
        this.quantity = quantity
        this.administratorId = administratorId
        this.creationTimestamp = creationTimestamp
        this.updateTimestamp = updateTimestamp
    }
}
