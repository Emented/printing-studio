/*
 * This file is generated by jOOQ.
 */
package com.emented.printingstudio.jooq.tables

import com.emented.printingstudio.jooq.Public
import com.emented.printingstudio.jooq.keys.CUSTOMER_SOCIAL_NETWORK_PKEY
import com.emented.printingstudio.jooq.keys.CUSTOMER_SOCIAL_NETWORK__CUSTOMER_SOCIAL_NETWORK_CUSTOMER_ID_FKEY
import com.emented.printingstudio.jooq.keys.CUSTOMER_SOCIAL_NETWORK__CUSTOMER_SOCIAL_NETWORK_SOCIAL_NETWORK_ID_FKEY
import com.emented.printingstudio.jooq.tables.records.CustomerSocialNetworkRecord
import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Name
import org.jooq.Record
import org.jooq.Row2
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.TableOptions
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.impl.TableImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CustomerSocialNetwork(
    alias: Name,
    child: Table<out Record>?,
    path: ForeignKey<out Record, CustomerSocialNetworkRecord>?,
    aliased: Table<CustomerSocialNetworkRecord>?,
    parameters: Array<Field<*>?>?,
) : TableImpl<CustomerSocialNetworkRecord>(
    alias,
    Public.PUBLIC,
    child,
    path,
    aliased,
    parameters,
    DSL.comment(""),
    TableOptions.table(),
) {
    companion object {

        /**
         * The reference instance of <code>public.customer_social_network</code>
         */
        val CUSTOMER_SOCIAL_NETWORK = CustomerSocialNetwork()
    }

    /**
     * The class holding records for this type
     */
    override fun getRecordType(): Class<CustomerSocialNetworkRecord> = CustomerSocialNetworkRecord::class.java

    /**
     * The column <code>public.customer_social_network.customer_id</code>.
     */
    val CUSTOMER_ID: TableField<CustomerSocialNetworkRecord, Long?> =
        createField(DSL.name("customer_id"), SQLDataType.BIGINT.nullable(false), this, "")

    /**
     * The column <code>public.customer_social_network.social_network_id</code>.
     */
    val SOCIAL_NETWORK_ID: TableField<CustomerSocialNetworkRecord, Long?> =
        createField(DSL.name("social_network_id"), SQLDataType.BIGINT.nullable(false), this, "")

    private constructor(alias: Name, aliased: Table<CustomerSocialNetworkRecord>?) : this(
        alias,
        null,
        null,
        aliased,
        null,
    )

    private constructor(
        alias: Name,
        aliased: Table<CustomerSocialNetworkRecord>?,
        parameters: Array<Field<*>?>?,
    ) : this(alias, null, null, aliased, parameters)

    /**
     * Create an aliased <code>public.customer_social_network</code> table reference
     */
    constructor(alias: String) : this(DSL.name(alias))

    /**
     * Create an aliased <code>public.customer_social_network</code> table reference
     */
    constructor(alias: Name) : this(alias, null)

    /**
     * Create a <code>public.customer_social_network</code> table reference
     */
    constructor() : this(DSL.name("customer_social_network"), null)

    constructor(
        child: Table<out Record>,
        key: ForeignKey<out Record, CustomerSocialNetworkRecord>,
    ) : this(Internal.createPathAlias(child, key), child, key, CUSTOMER_SOCIAL_NETWORK, null)

    override fun getSchema(): Schema = Public.PUBLIC
    override fun getPrimaryKey(): UniqueKey<CustomerSocialNetworkRecord> = CUSTOMER_SOCIAL_NETWORK_PKEY
    override fun getKeys(): List<UniqueKey<CustomerSocialNetworkRecord>> = listOf(CUSTOMER_SOCIAL_NETWORK_PKEY)
    override fun getReferences(): List<ForeignKey<CustomerSocialNetworkRecord, *>> = listOf(
        CUSTOMER_SOCIAL_NETWORK__CUSTOMER_SOCIAL_NETWORK_CUSTOMER_ID_FKEY,
        CUSTOMER_SOCIAL_NETWORK__CUSTOMER_SOCIAL_NETWORK_SOCIAL_NETWORK_ID_FKEY,
    )

    private lateinit var _customer: Customer
    private lateinit var _socialNetwork: SocialNetwork
    fun customer(): Customer {
        if (!this::_customer.isInitialized) {
            _customer = Customer(this, CUSTOMER_SOCIAL_NETWORK__CUSTOMER_SOCIAL_NETWORK_CUSTOMER_ID_FKEY)
        }

        return _customer
    }

    fun socialNetwork(): SocialNetwork {
        if (!this::_socialNetwork.isInitialized) {
            _socialNetwork =
                SocialNetwork(this, CUSTOMER_SOCIAL_NETWORK__CUSTOMER_SOCIAL_NETWORK_SOCIAL_NETWORK_ID_FKEY)
        }

        return _socialNetwork
    }

    override fun `as`(alias: String): CustomerSocialNetwork = CustomerSocialNetwork(DSL.name(alias), this)
    override fun `as`(alias: Name): CustomerSocialNetwork = CustomerSocialNetwork(alias, this)

    /**
     * Rename this table
     */
    override fun rename(name: String): CustomerSocialNetwork = CustomerSocialNetwork(DSL.name(name), null)

    /**
     * Rename this table
     */
    override fun rename(name: Name): CustomerSocialNetwork = CustomerSocialNetwork(name, null)

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------
    override fun fieldsRow(): Row2<Long?, Long?> = super.fieldsRow() as Row2<Long?, Long?>
}
