/*
 * This file is generated by jOOQ.
 */
package com.emented.printingstudio.jooq.tables.records

import com.emented.printingstudio.jooq.tables.FilamentType
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.UpdatableRecordImpl

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class FilamentTypeRecord() :
    UpdatableRecordImpl<FilamentTypeRecord>(FilamentType.FILAMENT_TYPE),
    Record2<Long?, String?> {

    var id: Long?
        set(value) = set(0, value)
        get() = get(0) as Long?

    var value: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<Long?, String?> = super.fieldsRow() as Row2<Long?, String?>
    override fun valuesRow(): Row2<Long?, String?> = super.valuesRow() as Row2<Long?, String?>
    override fun field1(): Field<Long?> = FilamentType.FILAMENT_TYPE.ID
    override fun field2(): Field<String?> = FilamentType.FILAMENT_TYPE.VALUE
    override fun component1(): Long? = id
    override fun component2(): String? = value
    override fun value1(): Long? = id
    override fun value2(): String? = value

    override fun value1(value: Long?): FilamentTypeRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): FilamentTypeRecord {
        this.value = value
        return this
    }

    override fun values(value1: Long?, value2: String?): FilamentTypeRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised FilamentTypeRecord
     */
    constructor(id: Long? = null, value: String? = null) : this() {
        this.id = id
        this.value = value
    }
}
