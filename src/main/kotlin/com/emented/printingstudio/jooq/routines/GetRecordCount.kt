/*
 * This file is generated by jOOQ.
 */
package com.emented.printingstudio.jooq.routines

import com.emented.printingstudio.jooq.Public
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GetRecordCount : AbstractRoutine<Long>("get_record_count", Public.PUBLIC, SQLDataType.BIGINT) {
    companion object {

        /**
         * The parameter <code>public.get_record_count.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Long?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BIGINT, false, false)

        /**
         * The parameter <code>public.get_record_count.table_name</code>.
         */
        val TABLE_NAME: Parameter<String?> = Internal.createParameter("table_name", SQLDataType.CLOB, false, false)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(TABLE_NAME)
    }

    /**
     * Set the <code>table_name</code> parameter IN value to the routine
     */
    fun setTableName(value: String?) = setValue(TABLE_NAME, value)

    /**
     * Set the <code>table_name</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    fun setTableName(field: Field<String?>) {
        setField(TABLE_NAME, field)
    }
}
