/*
 * This file is generated by jOOQ.
 */
package com.emented.printingstudio.jooq.routines


import com.emented.printingstudio.jooq.Public

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AddAdministrator : AbstractRoutine<java.lang.Void>("add_administrator", Public.PUBLIC) {
    companion object {

        /**
         * The parameter <code>public.add_administrator.p_username</code>.
         */
        val P_USERNAME: Parameter<String?> = Internal.createParameter("p_username", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>public.add_administrator.p_password_hash</code>.
         */
        val P_PASSWORD_HASH: Parameter<String?> = Internal.createParameter("p_password_hash", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>public.add_administrator.p_name</code>.
         */
        val P_NAME: Parameter<String?> = Internal.createParameter("p_name", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>public.add_administrator.p_surname</code>.
         */
        val P_SURNAME: Parameter<String?> = Internal.createParameter("p_surname", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>public.add_administrator.p_patronymic</code>.
         */
        val P_PATRONYMIC: Parameter<String?> = Internal.createParameter("p_patronymic", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>public.add_administrator.p_phone</code>.
         */
        val P_PHONE: Parameter<String?> = Internal.createParameter("p_phone", SQLDataType.VARCHAR, false, false)

        /**
         * The parameter <code>public.add_administrator.p_email</code>.
         */
        val P_EMAIL: Parameter<String?> = Internal.createParameter("p_email", SQLDataType.VARCHAR, false, false)
    }

    init {
        addInParameter(AddAdministrator.P_USERNAME)
        addInParameter(AddAdministrator.P_PASSWORD_HASH)
        addInParameter(AddAdministrator.P_NAME)
        addInParameter(AddAdministrator.P_SURNAME)
        addInParameter(AddAdministrator.P_PATRONYMIC)
        addInParameter(AddAdministrator.P_PHONE)
        addInParameter(AddAdministrator.P_EMAIL)
        setSQLUsable(false)
    }

    /**
     * Set the <code>p_username</code> parameter IN value to the routine
     */
    fun setPUsername(value: String?): Unit = setValue(AddAdministrator.P_USERNAME, value)

    /**
     * Set the <code>p_password_hash</code> parameter IN value to the routine
     */
    fun setPPasswordHash(value: String?): Unit = setValue(AddAdministrator.P_PASSWORD_HASH, value)

    /**
     * Set the <code>p_name</code> parameter IN value to the routine
     */
    fun setPName(value: String?): Unit = setValue(AddAdministrator.P_NAME, value)

    /**
     * Set the <code>p_surname</code> parameter IN value to the routine
     */
    fun setPSurname(value: String?): Unit = setValue(AddAdministrator.P_SURNAME, value)

    /**
     * Set the <code>p_patronymic</code> parameter IN value to the routine
     */
    fun setPPatronymic(value: String?): Unit = setValue(AddAdministrator.P_PATRONYMIC, value)

    /**
     * Set the <code>p_phone</code> parameter IN value to the routine
     */
    fun setPPhone(value: String?): Unit = setValue(AddAdministrator.P_PHONE, value)

    /**
     * Set the <code>p_email</code> parameter IN value to the routine
     */
    fun setPEmail(value: String?): Unit = setValue(AddAdministrator.P_EMAIL, value)
}
